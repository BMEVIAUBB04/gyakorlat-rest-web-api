// <auto-generated />
using System;
using AcmeShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcmeShop.Data.Migrations
{
    [DbContext(typeof(AcmeShopContext))]
    [Migration("20220315202214_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AcmeShop.Data.Afa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Kulcs")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Afa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Kulcs = 0
                        },
                        new
                        {
                            Id = 2,
                            Kulcs = 15
                        },
                        new
                        {
                            Id = 3,
                            Kulcs = 20
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.FizetesMod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Hatarido")
                        .HasColumnType("int");

                    b.Property<string>("Mod")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("FizetesMod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hatarido = 0,
                            Mod = "Készpénz"
                        },
                        new
                        {
                            Id = 2,
                            Hatarido = 8,
                            Mod = "Átutalás 8"
                        },
                        new
                        {
                            Id = 3,
                            Hatarido = 15,
                            Mod = "Átutalás 15"
                        },
                        new
                        {
                            Id = 4,
                            Hatarido = 30,
                            Mod = "Átutalás 30"
                        },
                        new
                        {
                            Id = 5,
                            Hatarido = 0,
                            Mod = "Kártya"
                        },
                        new
                        {
                            Id = 6,
                            Hatarido = 0,
                            Mod = "Utánvét"
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Kategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SzuloKategoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SzuloKategoriaId");

                    b.ToTable("Kategoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nev = "Játék"
                        },
                        new
                        {
                            Id = 2,
                            Nev = "Játszóház"
                        },
                        new
                        {
                            Id = 3,
                            Nev = "Bébijáték",
                            SzuloKategoriaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nev = "Építőjáték",
                            SzuloKategoriaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nev = "Fajáték",
                            SzuloKategoriaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Nev = "Plüss figurák",
                            SzuloKategoriaId = 1
                        },
                        new
                        {
                            Id = 7,
                            Nev = "Közlekedési eszközök",
                            SzuloKategoriaId = 1
                        },
                        new
                        {
                            Id = 8,
                            Nev = "0-6 hónapos kor",
                            SzuloKategoriaId = 3
                        },
                        new
                        {
                            Id = 9,
                            Nev = "6-18 hónapos kor",
                            SzuloKategoriaId = 3
                        },
                        new
                        {
                            Id = 10,
                            Nev = "18-24 hónapos kor",
                            SzuloKategoriaId = 3
                        },
                        new
                        {
                            Id = 11,
                            Nev = "DUPLO",
                            SzuloKategoriaId = 4
                        },
                        new
                        {
                            Id = 13,
                            Nev = "LEGO",
                            SzuloKategoriaId = 4
                        },
                        new
                        {
                            Id = 14,
                            Nev = "Építő elemek",
                            SzuloKategoriaId = 4
                        },
                        new
                        {
                            Id = 15,
                            Nev = "Építő kockák",
                            SzuloKategoriaId = 5
                        },
                        new
                        {
                            Id = 16,
                            Nev = "Készségfejlesztő játékok",
                            SzuloKategoriaId = 5
                        },
                        new
                        {
                            Id = 17,
                            Nev = "Logikai játékok",
                            SzuloKategoriaId = 5
                        },
                        new
                        {
                            Id = 18,
                            Nev = "Ügyességi játékok",
                            SzuloKategoriaId = 5
                        },
                        new
                        {
                            Id = 19,
                            Nev = "Bébi taxik",
                            SzuloKategoriaId = 7
                        },
                        new
                        {
                            Id = 20,
                            Nev = "Motorok",
                            SzuloKategoriaId = 7
                        },
                        new
                        {
                            Id = 21,
                            Nev = "Triciklik",
                            SzuloKategoriaId = 7
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Megrendeles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FizetesModId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Hatarido")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatuszId")
                        .HasColumnType("int");

                    b.Property<int?>("TelephelyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FizetesModId");

                    b.HasIndex("StatuszId");

                    b.HasIndex("TelephelyId");

                    b.ToTable("Megrendeles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Datum = new DateTime(2008, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FizetesModId = 1,
                            Hatarido = new DateTime(2008, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatuszId = 5,
                            TelephelyId = 3
                        },
                        new
                        {
                            Id = 2,
                            Datum = new DateTime(2008, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FizetesModId = 2,
                            Hatarido = new DateTime(2008, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatuszId = 5,
                            TelephelyId = 2
                        },
                        new
                        {
                            Id = 3,
                            Datum = new DateTime(2008, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FizetesModId = 1,
                            Hatarido = new DateTime(2008, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatuszId = 2,
                            TelephelyId = 1
                        },
                        new
                        {
                            Id = 4,
                            Datum = new DateTime(2008, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FizetesModId = 5,
                            Hatarido = new DateTime(2008, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatuszId = 3,
                            TelephelyId = 2
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.MegrendelesTetel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MegrendelesId")
                        .HasColumnType("int");

                    b.Property<int?>("Mennyiseg")
                        .HasColumnType("int");

                    b.Property<double?>("NettoAr")
                        .HasColumnType("float");

                    b.Property<int?>("StatuszId")
                        .HasColumnType("int");

                    b.Property<int?>("TermekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MegrendelesId");

                    b.HasIndex("StatuszId");

                    b.HasIndex("TermekId");

                    b.ToTable("MegrendelesTetel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MegrendelesId = 1,
                            Mennyiseg = 2,
                            NettoAr = 8356.0,
                            StatuszId = 5,
                            TermekId = 4
                        },
                        new
                        {
                            Id = 2,
                            MegrendelesId = 1,
                            Mennyiseg = 1,
                            NettoAr = 1854.0,
                            StatuszId = 5,
                            TermekId = 6
                        },
                        new
                        {
                            Id = 3,
                            MegrendelesId = 1,
                            Mennyiseg = 5,
                            NettoAr = 1738.0,
                            StatuszId = 5,
                            TermekId = 2
                        },
                        new
                        {
                            Id = 4,
                            MegrendelesId = 2,
                            Mennyiseg = 2,
                            NettoAr = 7488.0,
                            StatuszId = 5,
                            TermekId = 1
                        },
                        new
                        {
                            Id = 5,
                            MegrendelesId = 2,
                            Mennyiseg = 3,
                            NettoAr = 3725.0,
                            StatuszId = 5,
                            TermekId = 3
                        },
                        new
                        {
                            Id = 6,
                            MegrendelesId = 3,
                            Mennyiseg = 1,
                            NettoAr = 4362.0,
                            StatuszId = 3,
                            TermekId = 7
                        },
                        new
                        {
                            Id = 7,
                            MegrendelesId = 3,
                            Mennyiseg = 6,
                            NettoAr = 1854.0,
                            StatuszId = 2,
                            TermekId = 6
                        },
                        new
                        {
                            Id = 8,
                            MegrendelesId = 3,
                            Mennyiseg = 2,
                            NettoAr = 6399.0,
                            StatuszId = 3,
                            TermekId = 9
                        },
                        new
                        {
                            Id = 9,
                            MegrendelesId = 3,
                            Mennyiseg = 5,
                            NettoAr = 1738.0,
                            StatuszId = 1,
                            TermekId = 2
                        },
                        new
                        {
                            Id = 10,
                            MegrendelesId = 4,
                            Mennyiseg = 23,
                            NettoAr = 3725.0,
                            StatuszId = 3,
                            TermekId = 3
                        },
                        new
                        {
                            Id = 11,
                            MegrendelesId = 4,
                            Mennyiseg = 12,
                            NettoAr = 1738.0,
                            StatuszId = 3,
                            TermekId = 2
                        },
                        new
                        {
                            Id = 12,
                            MegrendelesId = 4,
                            Mennyiseg = 10,
                            NettoAr = 27563.0,
                            StatuszId = 3,
                            TermekId = 8
                        },
                        new
                        {
                            Id = 13,
                            MegrendelesId = 4,
                            Mennyiseg = 25,
                            NettoAr = 7488.0,
                            StatuszId = 3,
                            TermekId = 1
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Statusz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nev")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Statusz");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nev = "Rögzítve"
                        },
                        new
                        {
                            Id = 2,
                            Nev = "Várakozik"
                        },
                        new
                        {
                            Id = 3,
                            Nev = "Csomagolva"
                        },
                        new
                        {
                            Id = 4,
                            Nev = "Szállítás alatt"
                        },
                        new
                        {
                            Id = 5,
                            Nev = "Kiszállítva"
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Szamla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("FizetesiHatarido")
                        .HasColumnType("datetime2");

                    b.Property<string>("FizetesiMod")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("KiallitasDatum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KiallitoId")
                        .HasColumnType("int");

                    b.Property<int?>("MegrendelesId")
                        .HasColumnType("int");

                    b.Property<string>("MegrendeloIranyitoszam")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("MegrendeloNev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MegrendeloUtca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MegrendeloVaros")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NyomtatottPeldanyszam")
                        .HasColumnType("int");

                    b.Property<bool?>("Sztorno")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TeljesitesDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KiallitoId");

                    b.HasIndex("MegrendelesId");

                    b.ToTable("Szamla");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FizetesiHatarido = new DateTime(2008, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FizetesiMod = "Készpénz",
                            KiallitasDatum = new DateTime(2008, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KiallitoId = 1,
                            MegrendelesId = 1,
                            MegrendeloIranyitoszam = "3000",
                            MegrendeloNev = "Hajdú-Nagy Katalin",
                            MegrendeloUtca = "Vörösmarty tér. 5.",
                            MegrendeloVaros = "Hatvan",
                            NyomtatottPeldanyszam = 2,
                            Sztorno = false,
                            TeljesitesDatum = new DateTime(2008, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            FizetesiHatarido = new DateTime(2008, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FizetesiMod = "Átutalás 8",
                            KiallitasDatum = new DateTime(2008, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KiallitoId = 1,
                            MegrendelesId = 2,
                            MegrendeloIranyitoszam = "1051",
                            MegrendeloNev = "Puskás Norbert",
                            MegrendeloUtca = "Hercegprímás u. 22.",
                            MegrendeloVaros = "Budapest",
                            NyomtatottPeldanyszam = 2,
                            Sztorno = false,
                            TeljesitesDatum = new DateTime(2008, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.SzamlaKiallito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adoszam")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Iranyitoszam")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("Nev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Szamlaszam")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Utca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Varos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SzamlaKiallito");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adoszam = "15684995-2-32",
                            Iranyitoszam = "1119",
                            Nev = "Regio Játék Áruház Kft",
                            Szamlaszam = "259476332-15689799-10020065",
                            Utca = "Nándorfejérvári u. 23",
                            Varos = "Budapest"
                        },
                        new
                        {
                            Id = 2,
                            Adoszam = "68797867-1-32",
                            Iranyitoszam = "1119",
                            Nev = "Regio Játék Áruház Zrt",
                            Szamlaszam = "259476332-15689799-10020065",
                            Utca = "Nándorfejérvári u. 23",
                            Varos = "Budapest"
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.SzamlaTetel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Afakulcs")
                        .HasColumnType("int");

                    b.Property<int?>("MegrendelesTetelId")
                        .HasColumnType("int");

                    b.Property<int?>("Mennyiseg")
                        .HasColumnType("int");

                    b.Property<double?>("NettoAr")
                        .HasColumnType("float");

                    b.Property<string>("Nev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SzamlaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MegrendelesTetelId");

                    b.HasIndex("SzamlaId");

                    b.ToTable("SzamlaTetel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Afakulcs = 20,
                            MegrendelesTetelId = 1,
                            Mennyiseg = 2,
                            NettoAr = 8356.0,
                            Nev = "Fisher Price kalapáló",
                            SzamlaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Afakulcs = 20,
                            MegrendelesTetelId = 2,
                            Mennyiseg = 1,
                            NettoAr = 1854.0,
                            Nev = "Maxi Blocks 56 db-os",
                            SzamlaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Afakulcs = 20,
                            MegrendelesTetelId = 3,
                            Mennyiseg = 5,
                            NettoAr = 1738.0,
                            Nev = "Színes bébikönyv",
                            SzamlaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Afakulcs = 20,
                            MegrendelesTetelId = 4,
                            Mennyiseg = 2,
                            NettoAr = 7488.0,
                            Nev = "Activity playgim",
                            SzamlaId = 2
                        },
                        new
                        {
                            Id = 5,
                            Afakulcs = 20,
                            MegrendelesTetelId = 5,
                            Mennyiseg = 3,
                            NettoAr = 3725.0,
                            Nev = "Zenélő bébitelefon",
                            SzamlaId = 2
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Telephely", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Fax")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Iranyitoszam")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("Telefonszam")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Utca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Varos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VevoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VevoId");

                    b.ToTable("Telephely");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Iranyitoszam = "1114",
                            Telefonszam = "061-569-23-99",
                            Utca = "Baranyai u. 16.",
                            Varos = "Budapest"
                        },
                        new
                        {
                            Id = 2,
                            Fax = "061-457-11-04",
                            Iranyitoszam = "1051",
                            Telefonszam = "061-457-11-03",
                            Utca = "Hercegprímás u. 22.",
                            Varos = "Budapest"
                        },
                        new
                        {
                            Id = 3,
                            Fax = "0646-319-168",
                            Iranyitoszam = "3000",
                            Telefonszam = "0646-319-169",
                            Utca = "Vörösmarty tér. 5.",
                            Varos = "Hatvan"
                        },
                        new
                        {
                            Id = 4,
                            Fax = "0623-200-155",
                            Iranyitoszam = "2045",
                            Telefonszam = "0623-200-156",
                            Utca = "Határ u. 17.",
                            Varos = "Törökbálint"
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Termek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AfaId")
                        .HasColumnType("int");

                    b.Property<int?>("KategoriaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Kep")
                        .HasColumnType("image");

                    b.Property<string>("Leiras")
                        .HasColumnType("xml");

                    b.Property<double?>("NettoAr")
                        .HasColumnType("float");

                    b.Property<string>("Nev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Raktarkeszlet")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AfaId");

                    b.HasIndex("KategoriaId");

                    b.ToTable("Termek");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AfaId = 3,
                            KategoriaId = 8,
                            Leiras = "<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<termek>\r\n	<termek_meret>\r\n		<mertekegyseg>cm</mertekegyseg>\r\n		<szelesseg>150</szelesseg>\r\n		<magassag>50</magassag>\r\n		<melyseg>150</melyseg>\r\n	</termek_meret>\r\n	<csomag_parameterek>\r\n		<csomag_darabszam>1</csomag_darabszam>\r\n		<csomag_meret>\r\n			<mertekegyseg>cm</mertekegyseg>\r\n			<szelesseg>150</szelesseg>\r\n			<magassag>20</magassag>\r\n			<melyseg>20</melyseg>\r\n		</csomag_meret>\r\n	</csomag_parameterek>\r\n	<leiras>\r\n		Elemmel mukodik, a csomag nem tartalmay elemet.\r\n	</leiras>\r\n	<ajanlott_kor>0-18 hónap</ajanlott_kor>\r\n</termek>",
                            NettoAr = 7488.0,
                            Nev = "Activity playgim",
                            Raktarkeszlet = 21
                        },
                        new
                        {
                            Id = 2,
                            AfaId = 3,
                            KategoriaId = 8,
                            Leiras = "<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<termek>\r\n	<termek_meret>\r\n		<mertekegyseg>cm</mertekegyseg>\r\n		<szelesseg>15</szelesseg>\r\n		<magassag>2</magassag>\r\n		<melyseg>15</melyseg>\r\n	</termek_meret>\r\n	<csomag_parameterek>\r\n		<csomag_darabszam>1</csomag_darabszam>\r\n		<csomag_meret>\r\n			<mertekegyseg>cm</mertekegyseg>\r\n			<szelesseg>15</szelesseg>\r\n			<magassag>2</magassag>\r\n			<melyseg>15</melyseg>\r\n		</csomag_meret>\r\n	</csomag_parameterek>\r\n	<leiras>\r\n		Tiszta pamut oldalak, élénk színek, vastag kontúrok.\r\n		Ez a mini világ termék a babák életkori sajátosságainak megfelelően fejleszti a látást, tapintást. Motiválja a babát, hogy megtanulja környezete felismerését.\r\n		Felerősíthető a gyerekágyra, járókára vagy a babakocsira.\r\n	</leiras>\r\n	<ajanlott_kor>0-18 hónap</ajanlott_kor>\r\n</termek>",
                            NettoAr = 1738.0,
                            Nev = "Színes bébikönyv",
                            Raktarkeszlet = 58
                        },
                        new
                        {
                            Id = 3,
                            AfaId = 3,
                            KategoriaId = 9,
                            Leiras = "<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<termek>\r\n	<termek_meret>\r\n		<mertekegyseg>cm</mertekegyseg>\r\n		<szelesseg>20</szelesseg>\r\n		<magassag>12</magassag>\r\n		<melyseg>35</melyseg>\r\n	</termek_meret>\r\n	<csomag_parameterek>\r\n		<csomag_darabszam>1</csomag_darabszam>\r\n		<csomag_meret>\r\n			<mertekegyseg>cm</mertekegyseg>\r\n			<szelesseg>40</szelesseg>\r\n			<magassag>25</magassag>\r\n			<melyseg>50</melyseg>\r\n		</csomag_meret>\r\n	</csomag_parameterek>\r\n	<leiras>\r\n		9-36 hónaposan a zajok és a zene izgatja a gyermeki fantáziát. A gombok különböző hangélményekkel lepik meg a gyermeket a dallamok és csengetések segítségével. A 3 gomb megnyomásával vidám képmotívumok kezdenek forogni.\r\n	</leiras>\r\n	<ajanlott_kor>9-36 hónap</ajanlott_kor>\r\n</termek>",
                            NettoAr = 3725.0,
                            Nev = "Zenélő bébitelefon",
                            Raktarkeszlet = 18
                        },
                        new
                        {
                            Id = 4,
                            AfaId = 3,
                            KategoriaId = 10,
                            NettoAr = 8356.0,
                            Nev = "Fisher Price kalapáló",
                            Raktarkeszlet = 58
                        },
                        new
                        {
                            Id = 5,
                            AfaId = 3,
                            KategoriaId = 14,
                            NettoAr = 4325.0,
                            Nev = "Mega Bloks 24 db-os",
                            Raktarkeszlet = 47
                        },
                        new
                        {
                            Id = 6,
                            AfaId = 3,
                            KategoriaId = 14,
                            NettoAr = 1854.0,
                            Nev = "Maxi Blocks 56 db-os",
                            Raktarkeszlet = 36
                        },
                        new
                        {
                            Id = 7,
                            AfaId = 3,
                            KategoriaId = 14,
                            NettoAr = 4362.0,
                            Nev = "Building Blocks 80 db-os",
                            Raktarkeszlet = 25
                        },
                        new
                        {
                            Id = 8,
                            AfaId = 3,
                            KategoriaId = 13,
                            Leiras = "<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<termek>\r\n	<csomag_parameterek>\r\n		<csomag_darabszam>1</csomag_darabszam>\r\n		<csomag_meret>\r\n			<mertekegyseg>cm</mertekegyseg>\r\n			<szelesseg>80</szelesseg>\r\n			<magassag>20</magassag>\r\n			<melyseg>40</melyseg>\r\n		</csomag_meret>\r\n	</csomag_parameterek>\r\n	<leiras>\r\n		Elemek száma: 695 db.\r\n	</leiras>\r\n	<ajanlott_kor>5-12 év</ajanlott_kor>\r\n</termek>",
                            NettoAr = 27563.0,
                            Nev = "Lego City kikötője",
                            Raktarkeszlet = 12
                        },
                        new
                        {
                            Id = 9,
                            AfaId = 3,
                            KategoriaId = 11,
                            NettoAr = 6399.0,
                            Nev = "Lego Duplo Ásógép",
                            Raktarkeszlet = 26
                        },
                        new
                        {
                            Id = 10,
                            AfaId = 2,
                            KategoriaId = 2,
                            NettoAr = 800.0,
                            Nev = "Egy óra gyerekfelügyelet",
                            Raktarkeszlet = 0
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Vevo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Jelszo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("KozpontiTelephelyId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nev")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Szamlaszam")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("KozpontiTelephelyId");

                    b.ToTable("Vevo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "puskasnorbert@freemail.hu",
                            Jelszo = "huti9haj1s",
                            KozpontiTelephelyId = 2,
                            Login = "pnorbert",
                            Nev = "Puskás Norbert",
                            Szamlaszam = "16489665-05899845-10000038"
                        },
                        new
                        {
                            Id = 2,
                            Email = "hajdunagyk@hotmail.com",
                            Jelszo = "gandalf67j",
                            KozpontiTelephelyId = 1,
                            Login = "katinka",
                            Nev = "Hajdú-Nagy Katalin",
                            Szamlaszam = "54255831-15615432-25015126"
                        },
                        new
                        {
                            Id = 3,
                            Email = "janos.grosz@gmail.com",
                            Jelszo = "jag7guFs",
                            KozpontiTelephelyId = 4,
                            Login = "jano",
                            Nev = "Grosz János",
                            Szamlaszam = "25894467-12005362-59815126"
                        });
                });

            modelBuilder.Entity("AcmeShop.Data.Kategoria", b =>
                {
                    b.HasOne("AcmeShop.Data.Kategoria", "SzuloKategoria")
                        .WithMany("GyerekKategoriak")
                        .HasForeignKey("SzuloKategoriaId");

                    b.Navigation("SzuloKategoria");
                });

            modelBuilder.Entity("AcmeShop.Data.Megrendeles", b =>
                {
                    b.HasOne("AcmeShop.Data.FizetesMod", "FizetesMod")
                        .WithMany("Megrendelesek")
                        .HasForeignKey("FizetesModId");

                    b.HasOne("AcmeShop.Data.Statusz", "Statusz")
                        .WithMany("Megrendelesek")
                        .HasForeignKey("StatuszId");

                    b.HasOne("AcmeShop.Data.Telephely", "Telephely")
                        .WithMany("Megrendelesek")
                        .HasForeignKey("TelephelyId");

                    b.Navigation("FizetesMod");

                    b.Navigation("Statusz");

                    b.Navigation("Telephely");
                });

            modelBuilder.Entity("AcmeShop.Data.MegrendelesTetel", b =>
                {
                    b.HasOne("AcmeShop.Data.Megrendeles", "Megrendeles")
                        .WithMany("MegrendelesTetelek")
                        .HasForeignKey("MegrendelesId");

                    b.HasOne("AcmeShop.Data.Statusz", "Statusz")
                        .WithMany("MegrendelesTetelek")
                        .HasForeignKey("StatuszId");

                    b.HasOne("AcmeShop.Data.Termek", "Termek")
                        .WithMany("MegrendelesTetelek")
                        .HasForeignKey("TermekId");

                    b.Navigation("Megrendeles");

                    b.Navigation("Statusz");

                    b.Navigation("Termek");
                });

            modelBuilder.Entity("AcmeShop.Data.Szamla", b =>
                {
                    b.HasOne("AcmeShop.Data.SzamlaKiallito", "Kiallito")
                        .WithMany("Szamlak")
                        .HasForeignKey("KiallitoId");

                    b.HasOne("AcmeShop.Data.Megrendeles", "Megrendeles")
                        .WithMany("Szamlak")
                        .HasForeignKey("MegrendelesId");

                    b.Navigation("Kiallito");

                    b.Navigation("Megrendeles");
                });

            modelBuilder.Entity("AcmeShop.Data.SzamlaTetel", b =>
                {
                    b.HasOne("AcmeShop.Data.MegrendelesTetel", "MegrendelesTetel")
                        .WithMany("SzamlaTetelek")
                        .HasForeignKey("MegrendelesTetelId");

                    b.HasOne("AcmeShop.Data.Szamla", "Szamla")
                        .WithMany("SzamlaTetelek")
                        .HasForeignKey("SzamlaId");

                    b.Navigation("MegrendelesTetel");

                    b.Navigation("Szamla");
                });

            modelBuilder.Entity("AcmeShop.Data.Telephely", b =>
                {
                    b.HasOne("AcmeShop.Data.Vevo", "Vevo")
                        .WithMany("Telephelyek")
                        .HasForeignKey("VevoId");

                    b.Navigation("Vevo");
                });

            modelBuilder.Entity("AcmeShop.Data.Termek", b =>
                {
                    b.HasOne("AcmeShop.Data.Afa", "Afa")
                        .WithMany("Termekek")
                        .HasForeignKey("AfaId");

                    b.HasOne("AcmeShop.Data.Kategoria", "Kategoria")
                        .WithMany("Termekek")
                        .HasForeignKey("KategoriaId");

                    b.Navigation("Afa");

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("AcmeShop.Data.Vevo", b =>
                {
                    b.HasOne("AcmeShop.Data.Telephely", "KozpontiTelephely")
                        .WithMany("VevoKozpontiTelephelyek")
                        .HasForeignKey("KozpontiTelephelyId");

                    b.Navigation("KozpontiTelephely");
                });

            modelBuilder.Entity("AcmeShop.Data.Afa", b =>
                {
                    b.Navigation("Termekek");
                });

            modelBuilder.Entity("AcmeShop.Data.FizetesMod", b =>
                {
                    b.Navigation("Megrendelesek");
                });

            modelBuilder.Entity("AcmeShop.Data.Kategoria", b =>
                {
                    b.Navigation("GyerekKategoriak");

                    b.Navigation("Termekek");
                });

            modelBuilder.Entity("AcmeShop.Data.Megrendeles", b =>
                {
                    b.Navigation("MegrendelesTetelek");

                    b.Navigation("Szamlak");
                });

            modelBuilder.Entity("AcmeShop.Data.MegrendelesTetel", b =>
                {
                    b.Navigation("SzamlaTetelek");
                });

            modelBuilder.Entity("AcmeShop.Data.Statusz", b =>
                {
                    b.Navigation("MegrendelesTetelek");

                    b.Navigation("Megrendelesek");
                });

            modelBuilder.Entity("AcmeShop.Data.Szamla", b =>
                {
                    b.Navigation("SzamlaTetelek");
                });

            modelBuilder.Entity("AcmeShop.Data.SzamlaKiallito", b =>
                {
                    b.Navigation("Szamlak");
                });

            modelBuilder.Entity("AcmeShop.Data.Telephely", b =>
                {
                    b.Navigation("Megrendelesek");

                    b.Navigation("VevoKozpontiTelephelyek");
                });

            modelBuilder.Entity("AcmeShop.Data.Termek", b =>
                {
                    b.Navigation("MegrendelesTetelek");
                });

            modelBuilder.Entity("AcmeShop.Data.Vevo", b =>
                {
                    b.Navigation("Telephelyek");
                });
#pragma warning restore 612, 618
        }
    }
}
